# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Test

on:
  pull_request:
  push:
    paths-ignore:
      - '**.md'
    branches:
      - master

env:
  SKIP_TEST: true
  ISTIO_VERSION: 1.24.0

jobs:
  als:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        test:
          - name: Run Skywalking E2E Test (Elasticsearch as database)
            config: test/e2e/e2e-elasticsearch.yaml
          - name: Run Skywalking E2E Test (standalone BanyanDB as database)
            config: test/e2e/e2e-banyandb-standalone.yaml
          - name: Run Skywalking E2E Test (BanyanDB cluster as database)
            config: test/e2e/e2e-banyandb-cluster.yaml
          - name: Run SWCK oap-agent-adapter-hpa Test
            config: test/e2e/swck/oap-agent-adapter-hpa.yaml
          - name: Run SWCK oap-agent-banyandb Test
            config: test/e2e/swck/oap-agent-banyandb.yaml
          - name: Run SWCK oap-ui-agent-elasticsearch Test
            config: test/e2e/swck/oap-ui-agent-elasticsearch.yaml
          - name: Run SWCK oap-ui-agent-oapserverconfig Test
            config: test/e2e/swck/oap-ui-agent-oapserverconfig.yaml
          - name: Run SWCK oap-ui-agent-satellite Test
            config: test/e2e/swck/oap-ui-agent-satellite.yaml
    name: ${{ matrix.test.name }}
    env:
      OAP_TAG: bf04afdb2a841c60d5e27f5a9fc62d0879a5600c
      OAP_REPO: ghcr.io/apache/skywalking/oap
      UI_TAG: bf04afdb2a841c60d5e27f5a9fc62d0879a5600c
      UI_REPO: ghcr.io/apache/skywalking/ui
      SATELLITE_TAG: v35bfaff6352b4dc351a706772796a1f79b651c14
      SATELLITE_REPO: ghcr.io/apache/skywalking-satellite/skywalking-satellite
      BANYANDB_TAG: 7e5b2d0404e8ad6d5835eee6fe589a2544d0decb
      BANYANDB_REPO: ghcr.io/apache/skywalking-banyandb
    steps:
      - uses: actions/checkout@v2
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
      - name: ${{ matrix.test.name }}
        uses: apache/skywalking-infra-e2e@7e4b5b68716fdb7b79b21fa8908f9db497e1b115
        with:
          e2e-file: $GITHUB_WORKSPACE/${{ matrix.test.config }}
      - if: ${{ failure() }}
        run: |
          df -h
          du -sh .
          for dir in $(find . -type d -not -name '.*'); do
            du -sh $dir
          done
          docker images
      - uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        name: Upload Logs
        with:
          name: logs
          path: "${{ env.SW_INFRA_E2E_LOG_DIR }}"


  build:
    runs-on: ubuntu-latest
    needs: [als]
    steps:
      - name: dummy
        run: echo
