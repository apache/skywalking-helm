# Licensed to Apache Software Foundation (ASF) under one or more contributor
# license agreements. See the NOTICE file distributed with
# this work for additional information regarding copyright
# ownership. Apache Software Foundation (ASF) licenses this file to you under
# the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: {{ template "banyandb.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.banyandb.name }}"
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "banyandb.fullname" . }}
spec:
  serviceName: banyandb
  replicas: {{ .Values.banyandb.replicas }}
  selector:
    matchLabels:
      app: {{ template "banyandb.name" . }}
      component: "{{ .Values.banyandb.name }}"
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "banyandb.name" . }}
        component: "{{ .Values.banyandb.name }}"
        release: {{ .Release.Name }}
      {{- if .Values.banyandb.podAnnotations }}
      annotations:
{{ toYaml .Values.banyandb.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ template "banyandb.serviceAccountName" . }}
      {{- with .Values.banyandb.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.storages.volume }}
      volumes:
        {{- range $storage := .Values.storages.volume }}
        - name: {{ $storage.name }}
          persistentVolumeClaim:
            claimName: {{ $storage.claimName }}
        {{- end }}
      {{- end}}
      containers:
        - name: {{ .Values.banyandb.name }}
          image: {{ .Values.banyandb.image.repository }}:{{ required "banyandb.image.tag is required" .Values.banyandb.image.tag }}
          imagePullPolicy: {{ .Values.banyandb.image.pullPolicy }}
          args:
            {{- range $value := .Values.banyandb.config }}
            - {{ $value }}
            {{- end }}
          ports:
            {{- range $key, $value := .Values.banyandb.ports }}
            - containerPort: {{ $value }}
              name: {{ $key }}
            {{- end }}

          {{- if .Values.storages.volume }}
          volumeMounts:
            {{- range $storage := .Values.storages.volume }}
            - mountPath: {{ $storage.path }}
              name: {{ $storage.name }}
            {{- end }}
          {{- end }}

      {{- if .Values.banyandb.affinity }}
      {{- $affinity := .Values.banyandb.affinity }}
      affinity:
        {{- if $affinity.nodeAffinity }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            {{- range $requirement := $affinity.NodeAffinity.RequiredDuringSchedulingIgnoredDuringExecution.NodeSelectorTerms}}
              {{- range $matchExpression := $requirement.MatchExpressions }}
                - matchExpressions:
                    - key: {{ $matchExpression.key }}
                      operator: {{ $matchExpression.operator }}
                      values:
                        {{- range $v := $matchExpression.values }}
                        - {{ $v }}
                        {{- end}}
              {{- end}}
            {{- end}}
        {{- end}}

        {{- if $affinity.podAffinity }}
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            {{- range $term := $affinity.podAffinity.RequiredDuringSchedulingIgnoredDuringExecution }}
            - topologyKey: {{ $term.toplogyKey }}
              namespaces:
                {{- range $ns := $term.namespaces }}
                - {{ $ns }}
                {{- end }}
              labelSelector:
                MatchLabels:
                {{- range $key, $value := $term.labelSelector.matchLabels }}
                  {{ $key }} : {{ $value }}
                {{- end}}
            {{- end}}
        {{- end}}
      {{- end}}